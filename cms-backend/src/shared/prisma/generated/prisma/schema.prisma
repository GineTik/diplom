datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "./dbml"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  emails       Email[]
  passwordHash String

  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  instance   InstitutionInstance? @relation(fields: [instanceId], references: [id])
  instanceId String?
}

model Role {
  id String @id @default(uuid())

  name        String
  description String

  User        User[]
  permissions Permission[]
}

model Permission {
  id String @id @default(uuid())

  name        String
  description String

  roles Role[]
}

model Email {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model ExternalLinks {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  url   String
  name  String
  emoji String
  scope ExternalLinkScope

  institutionInstance   InstitutionInstance? @relation(fields: [institutionInstanceId], references: [id])
  institutionInstanceId String?
}

model Articles {
  id   String @id @default(uuid())
  slug String @unique

  title   String
  content String

  isPublished Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum ExternalLinkScope {
  INSTITUTION
  GROUP
  STUDENT
}

model InstitutionInstance {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  institutionName String
  institutionSlug String @unique

  modules       InstitutionInstanceModule[]
  User          User[]
  externalLinks ExternalLinks[]
}

model InstitutionInstanceModule {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  baseURL   String
  isEnabled Boolean @default(true)
  status    String
  apiKey    String?

  expectedMajorVersion Int
  expectedMinorVersion Int

  instance   InstitutionInstance @relation(fields: [instanceId], references: [id])
  instanceId String

  type   InstitutionInstanceModuleType @relation(fields: [typeId], references: [id])
  typeId String

  @@unique([instanceId, typeId])
}

model InstitutionInstanceModuleType {
  id   String @id @default(uuid())
  slug String @unique

  name String

  InstitutionInstanceModule InstitutionInstanceModule[]
}
